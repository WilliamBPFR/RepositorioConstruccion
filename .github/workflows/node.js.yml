# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
    build:
      runs-on: ubuntu-latest
          
      strategy:
        matrix:
          node-version: [16.x, 18.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
      - name: Chequeo del Repositorio
        uses: actions/checkout@v3

        env:
          USER: ${{ secrets.USER }}
          PASS: ${{ secrets.PASS }}

      - name: Install Docker
        run: |
          sudo apt-get remove moby-containerd containerd
          sudo apt-get remove moby-runc runc
          sudo apt-get purge docker docker-engine docker.io containerd runc
          sudo apt-get update
          sudo apt-get install docker.io -y

      - name: Subir BD Docker
        run: docker run --name mongodb -p 27017:27017 -d mongo

      - name: Build Imagen del Docker
        run: docker build -t mongo .

      - name: Configuraci贸n de Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Instalaci贸n de Dependencias
        run: npm ci
      
      - name: Transpilaci贸n de C贸digo
        run: npx babel src --out-dir dist --presets=@babel/preset-env

      - name: Run ESLint
        run: npx eslint .
        continue-on-error: true

      - name: Run Tests
        run: npm test

    CD:
      needs: build
      runs-on: ubuntu-latest

      steps:
          - name: Checkout
            uses: actions/checkout@v3
        
          - name: Docker meta
            id: meta
            uses: docker/metadata-action@v4
            with:
              images: |
                ${{ secrets.DOCKERHUB_USER }}/proy-final
              tags: |
                type=schedule
                type=ref,event=branch
                type=ref,event=pr
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}
                type=semver,pattern={{major}}
                type=sha
            
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v2

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Login to Docker Hub
            if: github.event_name != 'pull_request'
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKERHUB_USER }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v4
            with:
              context: .
              push: ${{ github.event_name != 'pull_request' }}
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}