# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.X
# # See: https://circleci.com/docs/configuration-reference/#jobsS
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello
#- run:
      #     name: Desarrollo Actions
      #     command: |
      #       git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
      #       git checkout desarrollo0
      #       git fetch origin master:master
      #       git merge master
      #       git push origin desarrollo
      #       git config --global --unset credential.helper

version: 2.1

jobs:
  desarrollo:
    docker:
      - image: node:16.13
    environment:
      REPO_URL: "/"
    steps:
      - add_ssh_keys:
            fingerprints:
              - "a5:c9:c5:32:20:7f:5e:26:a1:f8:d7:e3:b0:e8:c3:67"
      - checkout
      - run:
          name: Print Git Token
          command: |
            echo "Git Token: $GIT_TOKEN"
      - run:
          name: Development Tests
          command: |
            npm install
            # npm run build
            # npm test
            # INTREGACION CON SLACK PARA LAS CONFIRMACIONES
      - run:
          name: Create and Push Branch
          command: |
            git config --global user.email "chawiwifr@gmail.com"
            git config --global user.name "CircleCI Job"
            git fetch origin Desarrollo
            git checkout Desarrollo
            git pull origin Desarrollo
            # Use GitHub API to create a pull request
            curl -X POST -H "Authorization: token $GIT_TOKEN" \
            -d '{"title": "Merge Desarrollo into QA", "head": "Desarrollo", "base": "QA"}' \
            https://api.github.com/repos/WilliamBPFR/RepositorioConstruccion/pulls


  qa:
    docker:
      - image: node:16.13
    environment:
      GIT_TOKEN: $GIT_TOKEN
    steps:
      - checkout
      - run:
          name: QA Actions
          command: |
            git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
            git checkout qa
            git fetch origin Desarrollo:Desarrollo
            git merge Desarrollo
            git push origin qa
            git config --global --unset credential.helper
      - run:
          name: QA Tests
          command: |
            npx eslint
            npx jest
            # Integracion con Slack para las confirmaciones

  produccion:
    docker:
      - image: node:16.13
    environment:
      GIT_TOKEN: $GIT_TOKEN
    steps:
      - checkout
      - run:
          name: Produccion Actions
          command: |
            git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
            git checkout produccion
            git fetch origin qa:qa
            git merge qa
            git push origin produccion
            git config --global --unset credential.helper
      - run:
          name: Produccion Tests
          command: |
            npm run test-file -- Login.test.js
            # Integracion con Slack para las confirmaciones

workflows:
  version: 2
  build:
    jobs:
      - desarrollo:
          filters:
            branches:
              only:
                - Desarrollo
      - qa:
          requires:
            - desarrollo
          filters:
            branches:
              only:
                - QA
      - produccion:
          requires:
            - qa
          filters:
            branches:
              only:
                - Produccion