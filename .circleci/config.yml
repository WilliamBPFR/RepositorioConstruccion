version: 2.1

jobs:
  desarrollo:
    docker:
      - image: node:16.13
    environment:
      REPO_URL: "/"
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a5:c9:c5:32:20:7f:5e:26:a1:f8:d7:e3:b0:e8:c3:67"
      - checkout
      # - run:
      #     name: Set Environment Variables
      #     command: |
      #       export DATABASE_URL=$DATABASE_URL
      #       echo "DATABASE_URL: $DATABASE_URL"
      # - run:
      #     name: Print Environment Variables
      #     command: |
      #       env
      # - run:
      #     name: Install Dependencies
      #     command: npm install
      # - run:
      #     name: Generar Prisma Client
      #     command: npx prisma generate
      - run:
          name: Development Tests
          command: |
            npm install
            npx prisma generate
            npx jest || exit 1
      - run:
          name: Create and Push Branch
          command: |
            git config --global user.email "chawiwifr@gmail.com"
            git config --global user.name "CircleCI Job"
            git fetch origin Desarrollo
            git checkout Desarrollo
            git pull origin Desarrollo
            # Use GitHub API to create a pull request
            curl -X POST -H "Authorization: token $GIT_TOKEN" \
            -d '{"title": "Merge Desarrollo into QA", "head": "Desarrollo", "base": "QA"}' \
            https://api.github.com/repos/WilliamBPFR/RepositorioConstruccion/pulls
      # - run:
      #     name: Install Vercel CLI
      #     command: npm install --global vercel@latest
      # - run:
      #     name: Pull Vercel Environment Information
      #     command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      # - run:
      #     name: Build Project Artifacts
      #     command: vercel build --token=$VERCEL_TOKEN
      # - run:
      #     name: Deploy Project Artifacts to Vercel
      #     command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

  qa:
    docker:
      - image: node:16.13
    environment:
      GIT_TOKEN: $GIT_TOKEN
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: QA Tests
          command: |
            npx eslint
            npx jest || exit 1
      - run:
          name: Create and Push Branch
          command: |
            git config --global user.email "chawiwifr@gmail.com"
            git config --global user.name "CircleCI Job"
            git fetch origin QA
            git checkout QA
            git pull origin QA
            # Use GitHub API to create a pull request
            curl -X POST -H "Authorization: token $GIT_TOKEN" \
            -d '{"title": "Merge QA into Produccion", "head": "QA", "base": "Produccion"}' \
            https://api.github.com/repos/WilliamBPFR/RepositorioConstruccion/pulls
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

  produccion:
    docker:
      - image: node:16.13
    environment:
      GIT_TOKEN: $GIT_TOKEN
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Produccion Tests
          command: |
            #npm run test-file -- Login.test.js
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

workflows:
  version: 2
  build:
    jobs:
      - desarrollo:
          filters:
            branches:
              only:
                - Desarrollo
      - qa:
          filters:
            branches:
              only:
                - QA
      - produccion:
          requires:
            - qa
          filters:
            branches:
              only:
                - Produccion
