# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello

version: 2.1

jobs:
  desarrollo:
    docker:
      - image: node:14
    environment:
      REPO_URL: "/"
      GIT_TOKEN: $GIT_TOKEN
    steps:
      - checkout
      - run:
          name: Desarrollo Actions
          command: |
            git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
            git checkout desarrollo0
            git fetch origin master:master
            git merge master
            git push origin desarrollo
            git config --global --unset credential.helper
      - run:
          name: Development Tests
          command: |
            npm install
            npm run build
            # npm test
            # INTREGACION CON SLACK PARA LAS CONFIRMACIONES

  qa:
    docker:
      - image: node:14
    environment:
      GIT_TOKEN: $GIT_TOKEN
    steps:
      - checkout
      - run:
          name: QA Actions
          command: |
            git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
            git checkout qa
            git fetch origin desarrollo:desarrollo
            git merge desarrollo
            git push origin qa
            git config --global --unset credential.helper
      - run:
          name: QA Tests
          command: |
            npx eslint
            npx jest
            # Integracion con Slack para las confirmaciones

  produccion:
    docker:
      - image: node:14
    environment:
      GIT_TOKEN: $GIT_TOKEN
    steps:
      - checkout
      - run:
          name: Produccion Actions
          command: |
            git config --global credential.helper "!f() { echo username=WilliamBPFR; echo password=$GIT_TOKEN; }; f"
            git checkout produccion
            git fetch origin qa:qa
            git merge qa
            git push origin produccion
            git config --global --unset credential.helper
      - run:
          name: Produccion Tests
          command: |
            npm run test-file -- Login.test.js
            # Integracion con Slack para las confirmaciones

workflows:
  version: 2
  build:
    jobs:
      - desarrollo:
          filters:
            branches:
              only:
                - Desarrollo
      - qa:
          requires:
            - desarrollo
          filters:
            branches:
              only:
                - qa
      - produccion:
          requires:
            - qa
          filters:
            branches:
              only:
                - produccion